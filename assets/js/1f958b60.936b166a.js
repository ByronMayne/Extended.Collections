"use strict";(self.webpackChunkextended_collections=self.webpackChunkextended_collections||[]).push([[333],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),y=i,m=p["".concat(c,".").concat(y)]||p[y]||u[y]||a;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=y;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},1245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={},o="Ordered Dictionary",s={unversionedId:"generic/specialized/ordered_dictionary",id:"generic/specialized/ordered_dictionary",title:"Ordered Dictionary",description:"Combines the features of a dictionary and a list, allowing key-value pairs to be stored in a specific order and accessed efficiently by their keys.",source:"@site/../documentation/generic/specialized/ordered_dictionary.md",sourceDirName:"generic/specialized",slug:"/generic/specialized/ordered_dictionary",permalink:"/Extended.Collections/generic/specialized/ordered_dictionary",draft:!1,editUrl:"https://github.com/ByronMayne/Extended.Collections/edit/main/documentation/generic/specialized/ordered_dictionary.md",tags:[],version:"current",lastUpdatedAt:1694570108,formattedLastUpdatedAt:"Sep 13, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/Extended.Collections/"},next:{title:"Ring Buffer",permalink:"/Extended.Collections/generic/ring_buffer"}},c={},l=[{value:"Hypothetical Use Case:",id:"hypothetical-use-case",level:3}],d={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ordered-dictionary"},"Ordered Dictionary"),(0,i.kt)("p",null,"Combines the features of a dictionary and a list, allowing key-value pairs to be stored in a specific order and accessed efficiently by their keys. "),(0,i.kt)("p",null,"Pros:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Maintains the order of key-value pairs, which can be useful for scenarios where the order of insertion or access is important."),(0,i.kt)("li",{parentName:"ul"},"Provides the functionality of a dictionary, allowing for fast key-based lookups."),(0,i.kt)("li",{parentName:"ul"},"Supports generic TKey and TValue types, making it flexible for various data types.")),(0,i.kt)("p",null,"Cons:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Slightly higher memory usage compared to a regular dictionary due to the need to store the order of items."),(0,i.kt)("li",{parentName:"ul"},"Some operations may be slower compared to a regular dictionary due to maintaining the order.")),(0,i.kt)("h3",{id:"hypothetical-use-case"},"Hypothetical Use Case:"),(0,i.kt)("p",null,"Suppose you are building a task management application, and you need to maintain a list of tasks for a project while preserving the order in which they were added. An OrderedDictionary can be useful in this scenario to store and manage tasks associated with a project."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"file=../../../src/Extended.Collections.Playground/Generic/Specialized/OrderedDictionarySandbox.cs#L2-",file:"../../../src/Extended.Collections.Playground/Generic/Specialized/OrderedDictionarySandbox.cs#L2-"},'using System.Collections;\n\nnamespace Extended.Collections.Playground.Generic.Specialized;\n\npublic class OrderedDictionarySandbox : Sandbox\n{\n    private OrderedDictionary<string, string> m_tasks = new ();\n\n    protected override void Run()\n    {\n        // Add tasks to the project in a specific order.\n        m_tasks.Add("Task1", "Complete research");\n        m_tasks.Add("Task2", "Write documentation");\n        m_tasks.Add("Task3", "Test functionality");\n\n        // Access tasks by their keys while maintaining their order.\n        Console.WriteLine("Project Tasks:");\n        foreach (KeyValuePair<string, string> entry in m_tasks)\n        {\n            Console.WriteLine($"TaskId: {entry.Key}");\n            Console.WriteLine($"Name:{entry.Value}");\n        }\n\n        // Remove \n        m_tasks.RemoveAt(1); // Remove by index\n        m_tasks.Remove("Task1"); // Remove by key \n\n        Logger.Information("Value: {Value}", m_tasks);\n        // 1. [ \'Task2\' ] = "Write documentation"\n        // 2. [ \'Task3\' ] = "Test functionality"\n    }\n}\n')))}u.isMDXComponent=!0}}]);
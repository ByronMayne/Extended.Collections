"use strict";(self.webpackChunkextended_collections=self.webpackChunkextended_collections||[]).push([[21],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>g});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function f(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):f(f({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(n),p=o,g=d["".concat(c,".").concat(p)]||d[p]||s[p]||i;return n?t.createElement(g,f(f({ref:r},u),{},{components:n})):t.createElement(g,f({ref:r},u))}));function g(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,f=new Array(i);f[0]=p;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a[d]="string"==typeof e?e:o,f[1]=a;for(var l=2;l<i;l++)f[l]=n[l];return t.createElement.apply(null,f)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5381:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>f,default:()=>s,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=n(7462),o=(n(7294),n(3905));const i={},f="Ring Buffer",a={unversionedId:"generic/ring_buffer",id:"generic/ring_buffer",title:"Ring Buffer",description:"A ring buffer is a data structure that efficiently manages a fixed-size, cyclically-referenced buffer, allowing for constant-time insertions and removals while overwriting the oldest data when full.",source:"@site/../documentation/generic/ring_buffer.md",sourceDirName:"generic",slug:"/generic/ring_buffer",permalink:"/Extended.Collections/generic/ring_buffer",draft:!1,editUrl:"https://github.com/ByronMayne/Extended.Collections/edit/main/documentation/generic/ring_buffer.md",tags:[],version:"current",lastUpdatedAt:1694569887,formattedLastUpdatedAt:"Sep 13, 2023",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Ordered Dictionary",permalink:"/Extended.Collections/generic/specialized/ordered_dictionary"}},c={},l=[],u={toc:l},d="wrapper";function s(e){let{components:r,...n}=e;return(0,o.kt)(d,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ring-buffer"},"Ring Buffer"),(0,o.kt)("p",null,"A ring buffer is a data structure that efficiently manages a fixed-size, cyclically-referenced buffer, allowing for constant-time insertions and removals while overwriting the oldest data when full."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"file=../../src/Extended.Collections.Playground/Generic/RingBufferSandbox.cs#L2-",file:"../../src/Extended.Collections.Playground/Generic/RingBufferSandbox.cs#L2-"},'using Extended.Collections.Generic;\n\npublic class RingBufferSandbox : Sandbox\n{\n    private readonly RingBuffer<string> m_buffer = new (3);\n\n    protected override void Run()\n    {\n        m_buffer.Add("A");\n        m_buffer.Add("B");\n        m_buffer.Add("C");\n        Logger.Information("1. {Buffer}", m_buffer); // 1. [ "A", "B", "C" ]\n\n        m_buffer.Add("D");\n        Logger.Information("2. {Buffer}", m_buffer); // 2. [ "B", "C", "D" ]\n\n        m_buffer.Remove("C");\n        Logger.Information("3. {Buffer}", m_buffer); // 3. [ "B", "D" ]\n\n        m_buffer.Add("E");\n        Logger.Information("4. {Buffer}", m_buffer); // 4. [ "B", "D", "E" ]\n\n        m_buffer.Clear();\n        Logger.Information("5. {Buffer}", m_buffer); // [ ]\n    }\n}\n')))}s.isMDXComponent=!0}}]);